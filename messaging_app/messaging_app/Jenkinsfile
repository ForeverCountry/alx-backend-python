pipeline {
    agent {
        docker { image 'python:3.12' }
    }
    environment {
        DOCKER_IMAGE = 'ForeverCountry/django-messaging-app'
        DOCKER_TAG = 'latest'
        DOCKER_CREDENTIALS_ID = 'docker-hub-credentials-id'
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', credentialsId: 'my-credentials-id', url: 'https://github.com/ForeverCountry/alx-backend-python.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                sh 'pip3 install -r messaging_app/requirements.txt'
            }
        }
        stage('Run Tests') {
            steps {
                sh 'pytest messaging_app --junitxml=report.xml'
            }
        }
        stage('Archive Test Results') {
            steps {
                junit 'report.xml'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh "docker build -t ${DOCKER_IMAGE}:${DOCKER_TAG} -f messaging_app/Dockerfile ."
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                withDockerRegistry([credentialsId: "${DOCKER_CREDENTIALS_ID}", url: '']) {
                    sh "docker push ${DOCKER_IMAGE}:${DOCKER_TAG}"
                }
            }
        }
    }
    post {
        success {
            echo 'Build and push to Docker Hub were successful.'
        }
        failure {
            echo 'The build or push failed. Check the logs for details.'
        }
    }
}
