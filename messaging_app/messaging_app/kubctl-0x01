#!/usr/bin/env bash

# Script to scale a Kubernetes app, verify scaling, perform load testing, and monitor resource usage

# Function to check if a command exists
command_exists() {
    command -v "$1" >/dev/null 2>&1
}

# Ensure kubectl is installed
if ! command_exists kubectl; then
    echo "kubectl is not installed. Please install it and try again."
    exit 1
fi

# Ensure wrk is installed
if ! command_exists wrk; then
    echo "wrk is not installed. Please install it (https://github.com/wg/wrk) and try again."
    exit 1
fi

# Scale the Django app to 3 replicas
echo "Scaling the Django app deployment to 3 replicas..."
kubectl scale deployment django-messaging-app --replicas=3

if [ $? -ne 0 ]; then
    echo "Failed to scale the deployment. Please check your deployment configuration."
    exit 1
fi

echo "Scaled successfully."

# Verify that multiple pods are running
echo "Verifying that multiple pods are running..."
kubectl get pods -l app=django-messaging-app

# Perform load testing using wrk
echo "Starting load testing on the app..."

# Port-forward the service to access it locally
kubectl port-forward svc/django-messaging-service 8000:8000 &
PORT_FORWARD_PID=$!

# Allow port-forwarding to initialize
sleep 5

# Run wrk for 30 seconds with 10 connections and 2 threads
wrk -t2 -c10 -d30s http://localhost:8000

# Kill the port-forward process
kill $PORT_FORWARD_PID

# Monitor resource usage
echo "Monitoring resource usage..."
kubectl top pods

echo "Scaling, verification, load testing, and monitoring completed."
